definitions:
  handlers.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  handlers.RegisterRequest:
    properties:
      email:
        example: user@example.com
        type: string
    required:
    - email
    type: object
  handlers.TokenResponse:
    properties:
      token:
        type: string
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: integer
      login:
        type: string
      password:
        type: string
      updatedAt:
        type: string
      verifiedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API приложения Auth с JWT авторизацией
  title: Auth API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User login
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.TokenResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      tags:
      - Auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns the created user object
      parameters:
      - description: Registration data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully registered
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid input data
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: User already exists
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User registration
      tags:
      - Auth
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
